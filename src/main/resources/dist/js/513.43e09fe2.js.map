{"version":3,"file":"js/513.43e09fe2.js","mappings":"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","sources":["webpack://quasardesign/./src/api/role/sysRole.js","webpack://quasardesign/./src/components/Pagination.vue","webpack://quasardesign/./src/components/Pagination.vue?39f5","webpack://quasardesign/./src/views/user/editUser.vue","webpack://quasardesign/./src/views/user/editUser.vue?9d15","webpack://quasardesign/./src/views/user/index.vue","webpack://quasardesign/./src/views/user/index.vue?8566"],"sourcesContent":["import request from \"../../utils/request\";\r\n\r\n/**\r\n * Obtener lista de roles\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function getRoleList(params){\r\n    return request({\r\n        url: '/api/sys/role/table',\r\n        method: 'get',\r\n        params\r\n    })\r\n}\r\n\r\n/**\r\n * Editar rol\r\n * @param data\r\n * @returns {AxiosPromise}\r\n */\r\nexport function editRole(data){\r\n    return request({\r\n        url: '/api/sys/role/edit',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n/**\r\n *Autorización de rol\r\n * @param data\r\n * @returns {AxiosPromise}\r\n */\r\nexport function authorizeRole(data){\r\n    return request({\r\n        url: '/api/sys/role/menu/edit',\r\n        method: 'post',\r\n        data\r\n    })\r\n}\r\n\r\n/**\r\n * Eliminar rol\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function delRole(params){\r\n    return request({\r\n        url: '/api/sys/role/del',\r\n        method: 'delete',\r\n        params\r\n    })\r\n}\r\n\r\n/**\r\n * Obtener el menú de rol autorizado\r\n * @param params\r\n * @returns {AxiosPromise}\r\n */\r\nexport function getMenusByRoleId(params){\r\n    return request({\r\n        url: '/api/sys/role/menu/list',\r\n        method: 'get',\r\n        params\r\n    })\r\n}","<template>\r\n  <el-pagination\r\n      @size-change=\"handleSizeChange\"\r\n      @current-change=\"handleCurrentChange\"\r\n      :current-page=\"currentPage\"\r\n      :page-sizes=\"[10, 20, 50, 100, 200, 500, 1000]\"\r\n      :page-size=\"pageSize\"\r\n      layout=\"total, sizes, prev, pager, next, jumper\"\r\n      :total=\"totalSize\">\r\n  </el-pagination>\r\n</template>\r\n\r\n<script setup>\r\nimport {computed} from \"vue\";\r\n\r\nconst props = defineProps({\r\n  current: {\r\n    type: Number,\r\n    default: 1\r\n  },\r\n  size: {\r\n    type: Number,\r\n    default: 10\r\n  },\r\n  total: {\r\n    type: Number,\r\n    default: 0\r\n  }\r\n})\r\n\r\nconst emit = defineEmits(['update:current', 'update:size', 'get-list'])\r\n\r\nlet currentPage = computed({\r\n  get: () => props.current,\r\n  set: (val) => emit('update:current', val)\r\n})\r\n\r\nlet pageSize = computed({\r\n  get: () => props.size,\r\n  set: (val) => emit('update:size', val)\r\n})\r\n\r\nconst totalSize = computed(() => {\r\n  return props.total\r\n})\r\n\r\n//  Modificar el número de elementos por página\r\nconst handleSizeChange = (val) => {\r\n  pageSize.value = val\r\n  emit('get-list')\r\n}\r\n//  Modificar el número de página actual\r\nconst handleCurrentChange = (val) => {\r\n  currentPage.value = val\r\n  emit('get-list')\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./Pagination.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","<template>\r\n  <el-dialog :title=\"state.title\" v-model=\"visible\" :close-on-click-modal=\"false\" @opened=\"openFun\">\r\n    <el-form :model=\"state.userForm\" :rules=\"state.rules\" ref=\"userRef\" label-width=\"120px\">\r\n      <el-form-item v-show=\"false\" prop=\"id\">\r\n        <el-input v-model=\"state.userForm.id\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"nombre de usuario\" prop=\"username\">\r\n        <el-input v-model=\"state.userForm.username\" placeholder=\"Por favor ingrese el nombre de usuario\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"Apoodo\" prop=\"nickName\">\r\n        <el-input v-model=\"state.userForm.nickName\" placeholder=\"Por favor ingresa un apodo\"></el-input>\r\n      </el-form-item>\r\n      <el-form-item label=\"rol de usuario\" prop=\"roleIds\">\r\n        <el-select v-model=\"state.userForm.roleIds\" multiple placeholder=\"Por favor seleccione un rol\">\r\n          <el-option v-for=\"(item, index) in state.roleList\" :key=\"index\" :label=\"item.roleName\" :value=\"parseInt(item.id)\"></el-option>\r\n        </el-select>\r\n      </el-form-item>\r\n    </el-form>\r\n    <template #footer>\r\n      <span>\r\n      <el-button @click=\"resetForm(userRef)\">reiniciar</el-button>\r\n      <el-button type=\"primary\" :loading=\"isLoading\" @click=\"submitUser\">seguro</el-button>\r\n    </span>\r\n    </template>\r\n  </el-dialog>\r\n</template>\r\n\r\n<script setup>\r\nimport {editUser} from \"../../api/user/sysUser\";\r\nimport {getRoleList} from \"../../api/role/sysRole\";\r\nimport {errorMsg, successMsg} from \"../../utils/message\";\r\nimport {resetForm} from \"../../utils/common\";\r\nimport {computed, reactive, ref} from \"vue\";\r\n\r\nconst props = defineProps({\r\n  dialogVisible: {\r\n    type: Boolean,\r\n    required: true,\r\n    default: false\r\n  },\r\n  userObj: Object\r\n})\r\n\r\nconst emit = defineEmits(['update:dialogVisible', 'get-list'])\r\n\r\nconst visible = computed({\r\n  get: () => props.dialogVisible,\r\n  set: (val) => emit('update:dialogVisible', val)\r\n})\r\n\r\nconst isLoading = ref(false)\r\n\r\nconst userRef = ref()\r\n\r\nconst state = reactive({\r\n  title: 'Nuevo',\r\n  userForm: {\r\n    id: null,\r\n    username: '',\r\n    nickName: '',\r\n    roleIds: []\r\n  },\r\n  rules: {\r\n    username: [{required: true, message: 'El nombre de usuario no puede estar vacío', trigger: 'blur'}],\r\n    nickName: [{required: true, message: 'El apodo del usuario no puede estar vacío', trigger: 'blur'}],\r\n    roleIds: [{required: true, message: 'El rol de usuario no puede estar vacío', trigger: 'change'}]\r\n  },\r\n  roleList: []\r\n})\r\n\r\nconst openFun = () => {\r\n  resetForm(userRef.value)\r\n  state.title = 'Nuevo'\r\n  getRoleListFun()\r\n  isLoading.value = false\r\n  if (props.userObj.id){\r\n    state.title = 'Editar'\r\n    state.userForm = props.userObj\r\n    state.userForm.roleIds = state.userForm.roleIds[0].split(',')\r\n    // Convertir números de cadena en roleIds a números\r\n    state.userForm.roleIds = state.userForm.roleIds.map(Number)\r\n  }\r\n}\r\n//  Obtener lista de roles\r\nconst getRoleListFun = () => {\r\n  getRoleList({}).then(res => {\r\n    if (res.success){\r\n      state.roleList = res.data\r\n    } else {\r\n      errorMsg(res.msg)\r\n    }\r\n  })\r\n}\r\n//  Entregar\r\nconst submitUser = () => {\r\n  console.log('INSERTAR');\r\n  userRef.value.validate((valid) => {\r\n    if (valid){\r\n      isLoading.value = true\r\n      editUser(state.userForm).then(res => {\r\n        if (res.success){\r\n          successMsg(res.data)\r\n          console.log(res.data)\r\n          visible.value = false\r\n          emit('get-list')\r\n        } else {\r\n          errorMsg(res.msg)\r\n        }\r\n        isLoading.value = false\r\n      })\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n :deep(.vue-treeselect__control){\r\n  height: 28px;\r\n}\r\n :deep(.el-form-item__content){\r\n   line-height: 28px;\r\n   font-size: 12px;\r\n }\r\n</style>","import script from \"./editUser.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./editUser.vue?vue&type=script&setup=true&lang=js\"\n\nimport \"./editUser.vue?vue&type=style&index=0&id=a24c4b0e&scoped=true&lang=css\"\n\nimport exportComponent from \"../../../node_modules/vue-loader/dist/exportHelper.js\"\nconst __exports__ = /*#__PURE__*/exportComponent(script, [['__scopeId',\"data-v-a24c4b0e\"]])\n\nexport default __exports__","<template>\r\n  <div>\r\n    <div class=\"searchDiv\">\r\n      <el-input class=\"searchInput\" v-model=\"state.blurry\" placeholder=\"Por favor ingrese nombre de usuario o apodo\" clearable></el-input>\r\n      <el-button type=\"primary\" @click=\"getUserListFun\">Consulta</el-button>\r\n      <el-button v-if=\"hasPer('user:add')\" @click=\"editUserFun\" style=\"float: right;\">Nuevo</el-button>\r\n    </div>\r\n    <el-table :data=\"state.tableData\" row-key=\"id\" border>\r\n      <el-table-column label=\"nombre de usuario\" prop=\"username\"></el-table-column>\r\n      <el-table-column label=\"Apodo\" prop=\"nickName\"></el-table-column>\r\n      <el-table-column label=\"Role\" prop=\"roles\"></el-table-column>\r\n      <el-table-column label=\"Estado\" prop=\"enabled\" width=\"100\">\r\n        <template #default=\"scope\">\r\n          <el-tag v-if=\"scope.row.enabled\" type=\"success\">permitir</el-tag>\r\n          <el-tag v-else type=\"danger\">desactivar</el-tag>\r\n        </template>\r\n      </el-table-column>\r\n      <el-table-column label=\"funcionar\" prop=\"option\" width=\"220px\" align=\"center\">\r\n        <template #default=\"scope\">\r\n          <span v-if=\"scope.row.username !== state.username\">\r\n            <el-button v-if=\"hasPer('user:enabled')\" :type=\"buttonType(scope.row.enabled)\"\r\n                       @click=\"enabledUserFun(JSON.parse(JSON.stringify(scope.row)))\">\r\n              {{scope.row.enabled ? 'desactivar' : 'permitir'}}</el-button>\r\n            <el-button v-if=\"hasPer('user:edit')\" type=\"primary\" @click=\"editUserFun(JSON.parse(JSON.stringify(scope.row)))\">editar</el-button>\r\n            <el-button v-if=\"hasPer('user:del')\" type=\"danger\" @click=\"deleteUser(scope.row.id, scope.row.username)\">borrar</el-button>\r\n          </span>\r\n        </template>\r\n      </el-table-column>\r\n    </el-table>\r\n    <!--paginacion-->\r\n    <pagination \r\n    v-model:current=\"state.current\" \r\n    v-model:size=\"state.size\" \r\n    v-model:total=\"state.total\" \r\n    @get-list=\"getUserListFun\">\r\n  </pagination>\r\n    <!--editar-->\r\n    <edit-user v-model:dialog-visible=\"dialogVisible\" :user-obj=\"state.userObj\" @get-list=\"getUserListFun\"></edit-user>\r\n  </div>\r\n</template>\r\n\r\n<script setup>\r\nimport editUser from \"./editUser\";\r\nimport Pagination from \"../../components/Pagination\";\r\nimport {getUserList, delUser, enabledUser} from \"../../api/user/sysUser\";\r\nimport {errorMsg, infoMsg, successMsg} from \"../../utils/message\";\r\nimport {hasPer} from \"../../utils/common\";\r\nimport {useStore} from \"../../store\";\r\nimport {onMounted, reactive, ref} from \"vue\";\r\nimport {ElMessageBox} from \"element-plus\";\r\n\r\nconst store = useStore()\r\n\r\nconst state = reactive({\r\n  blurry: '',\r\n  username: store.userInfo.username,\r\n  tableData: [],\r\n  userObj: {},\r\n  current: 1,\r\n  size: 10,\r\n  total: 0\r\n})\r\n\r\nconst dialogVisible = ref(false)\r\n\r\nonMounted(() => {\r\n  getUserListFun()\r\n})\r\n\r\nconst getUserListFun = () => {\r\n  const params = {\r\n    blurry: state.blurry,\r\n    size: state.size,\r\n    currentPage: state.current\r\n  }\r\n  getUserList(params).then(res => {\r\n    if (res.success){\r\n      state.tableData = res.data.records\r\n      state.total = res.data.total\r\n    }\r\n  })\r\n}\r\n\r\nconst editUserFun = (row) => {\r\n  dialogVisible.value = true\r\n  state.userObj = row.id ? row : {}\r\n}\r\n\r\nconst deleteUser = (id, username) => {\r\n  ElMessageBox.confirm('Confirmar para eliminar usuario 【' + username + '】？', 'pista', {\r\n    confirmButtonText: 'Seguro',\r\n    cancelButtonText: 'Cancelar',\r\n    type: 'warning'\r\n  }).then(() => {\r\n    delUser({id: id}).then(res => {\r\n      if (res.success){\r\n        successMsg(res.data)\r\n        getUserListFun()\r\n      } else {\r\n        errorMsg(res.msg)\r\n      }\r\n    })\r\n  }).catch(() => {\r\n    infoMsg('Operacion Cancelada')\r\n  })\r\n}\r\n//  Activar/desactivar usuarios\r\nconst enabledUserFun = (row) => {\r\n  row.enabled = !row.enabled\r\n  const str = row.enabled ? 'permitir' : 'desactivar'\r\n  const color = row.enabled ? '#67C23A' : '#F56C6C'\r\n  ElMessageBox.confirm('Seguro <span style=\"color: '+color+'\">' + str + '</span>usuario【' + row.nickName + '】？', 'pista', {\r\n    confirmButtonText: 'Seguro',\r\n    cancelButtonText: 'Cancelar',\r\n    type: 'warning',\r\n    dangerouslyUseHTMLString: true\r\n  }).then(() => {\r\n    enabledUser(row).then(res => {\r\n      if (res.success){\r\n        successMsg(res.data)\r\n        getUserListFun()\r\n      } else {\r\n        errorMsg(res.msg)\r\n      }\r\n    })\r\n  }).catch(() => {\r\n    infoMsg('Operacion Cancelada')\r\n  })\r\n}\r\n\r\nconst buttonType = (type) => {\r\n  if (type){\r\n    return 'warning'\r\n  } else {\r\n    return 'success'\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n\r\n</style>","import script from \"./index.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./index.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["getRoleList","params","request","url","method","editRole","data","authorizeRole","delRole","getMenusByRoleId","props","__props","emit","__emit","currentPage","computed","get","current","set","val","pageSize","size","totalSize","total","handleSizeChange","value","handleCurrentChange","__exports__","visible","dialogVisible","isLoading","ref","userRef","state","reactive","title","userForm","id","username","nickName","roleIds","rules","required","message","trigger","roleList","openFun","resetForm","getRoleListFun","userObj","split","map","Number","then","res","success","errorMsg","msg","submitUser","console","log","validate","valid","editUser","successMsg","store","useStore","blurry","userInfo","tableData","onMounted","getUserListFun","getUserList","records","editUserFun","row","deleteUser","ElMessageBox","confirm","confirmButtonText","cancelButtonText","type","delUser","catch","infoMsg","enabledUserFun","enabled","str","color","dangerouslyUseHTMLString","enabledUser","buttonType"],"sourceRoot":""}